// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol/person.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResponseType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseType) Reset()         { *m = ResponseType{} }
func (m *ResponseType) String() string { return proto.CompactTextString(m) }
func (*ResponseType) ProtoMessage()    {}
func (*ResponseType) Descriptor() ([]byte, []int) {
	return fileDescriptor_8983de453e9aa8a7, []int{0}
}

func (m *ResponseType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseType.Unmarshal(m, b)
}
func (m *ResponseType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseType.Marshal(b, m, deterministic)
}
func (m *ResponseType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseType.Merge(m, src)
}
func (m *ResponseType) XXX_Size() int {
	return xxx_messageInfo_ResponseType.Size(m)
}
func (m *ResponseType) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseType.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseType proto.InternalMessageInfo

type RequestType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestType) Reset()         { *m = RequestType{} }
func (m *RequestType) String() string { return proto.CompactTextString(m) }
func (*RequestType) ProtoMessage()    {}
func (*RequestType) Descriptor() ([]byte, []int) {
	return fileDescriptor_8983de453e9aa8a7, []int{1}
}

func (m *RequestType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestType.Unmarshal(m, b)
}
func (m *RequestType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestType.Marshal(b, m, deterministic)
}
func (m *RequestType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestType.Merge(m, src)
}
func (m *RequestType) XXX_Size() int {
	return xxx_messageInfo_RequestType.Size(m)
}
func (m *RequestType) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestType.DiscardUnknown(m)
}

var xxx_messageInfo_RequestType proto.InternalMessageInfo

type Person struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_8983de453e9aa8a7, []int{2}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func init() {
	proto.RegisterType((*ResponseType)(nil), "protocol.ResponseType")
	proto.RegisterType((*RequestType)(nil), "protocol.RequestType")
	proto.RegisterType((*Person)(nil), "protocol.Person")
}

func init() { proto.RegisterFile("protocol/person.proto", fileDescriptor_8983de453e9aa8a7) }

var fileDescriptor_8983de453e9aa8a7 = []byte{
	// 180 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x2f, 0x48, 0x2d, 0x2a, 0xce, 0xcf, 0xd3, 0x03, 0xf3, 0x85, 0x38,
	0x60, 0xc2, 0x4a, 0x7c, 0x5c, 0x3c, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x21, 0x95,
	0x05, 0xa9, 0x4a, 0xbc, 0x5c, 0xdc, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x60, 0xae, 0x1e,
	0x17, 0x5b, 0x00, 0x58, 0xa3, 0x90, 0x10, 0x17, 0x4b, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0xa3, 0x02,
	0xa3, 0x06, 0x67, 0x10, 0x98, 0x2d, 0x24, 0xc0, 0xc5, 0x9c, 0x98, 0x9e, 0x2a, 0xc1, 0xa4, 0xc0,
	0xa8, 0xc1, 0x1a, 0x04, 0x62, 0x1a, 0x35, 0x33, 0x72, 0xf1, 0x42, 0x34, 0x04, 0xa7, 0x16, 0x95,
	0x65, 0x26, 0xa7, 0x0a, 0x59, 0x72, 0x71, 0xf9, 0x64, 0x16, 0x97, 0x40, 0x4d, 0x11, 0xd5, 0x83,
	0xd9, 0xac, 0x87, 0x64, 0x8d, 0x94, 0x00, 0x42, 0x18, 0xa2, 0x50, 0x89, 0xc1, 0x80, 0x51, 0xc8,
	0x9c, 0x8b, 0xd3, 0x31, 0x25, 0x05, 0xaa, 0x13, 0x43, 0x89, 0x94, 0x18, 0xb2, 0x59, 0x48, 0x5e,
	0x60, 0x48, 0x62, 0x03, 0x4b, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x19, 0x40, 0xbe, 0x4d,
	0xfe, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PersonServiceClient is the client API for PersonService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PersonServiceClient interface {
	ListPerson(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (PersonService_ListPersonClient, error)
	AddPerson(ctx context.Context, in *Person, opts ...grpc.CallOption) (*ResponseType, error)
}

type personServiceClient struct {
	cc *grpc.ClientConn
}

func NewPersonServiceClient(cc *grpc.ClientConn) PersonServiceClient {
	return &personServiceClient{cc}
}

func (c *personServiceClient) ListPerson(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (PersonService_ListPersonClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PersonService_serviceDesc.Streams[0], "/protocol.PersonService/ListPerson", opts...)
	if err != nil {
		return nil, err
	}
	x := &personServiceListPersonClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PersonService_ListPersonClient interface {
	Recv() (*Person, error)
	grpc.ClientStream
}

type personServiceListPersonClient struct {
	grpc.ClientStream
}

func (x *personServiceListPersonClient) Recv() (*Person, error) {
	m := new(Person)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *personServiceClient) AddPerson(ctx context.Context, in *Person, opts ...grpc.CallOption) (*ResponseType, error) {
	out := new(ResponseType)
	err := c.cc.Invoke(ctx, "/protocol.PersonService/AddPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PersonServiceServer is the server API for PersonService service.
type PersonServiceServer interface {
	ListPerson(*RequestType, PersonService_ListPersonServer) error
	AddPerson(context.Context, *Person) (*ResponseType, error)
}

func RegisterPersonServiceServer(s *grpc.Server, srv PersonServiceServer) {
	s.RegisterService(&_PersonService_serviceDesc, srv)
}

func _PersonService_ListPerson_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestType)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PersonServiceServer).ListPerson(m, &personServiceListPersonServer{stream})
}

type PersonService_ListPersonServer interface {
	Send(*Person) error
	grpc.ServerStream
}

type personServiceListPersonServer struct {
	grpc.ServerStream
}

func (x *personServiceListPersonServer) Send(m *Person) error {
	return x.ServerStream.SendMsg(m)
}

func _PersonService_AddPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Person)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).AddPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.PersonService/AddPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).AddPerson(ctx, req.(*Person))
	}
	return interceptor(ctx, in, info, handler)
}

var _PersonService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.PersonService",
	HandlerType: (*PersonServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPerson",
			Handler:    _PersonService_AddPerson_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListPerson",
			Handler:       _PersonService_ListPerson_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protocol/person.proto",
}
